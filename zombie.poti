use "jerimum"

tipo Zombie
  var x, y, escala: Real
  var exibirzombie := esperazombie[1]
  var r_pontos := 0
  var r_dano := 10
  var r_vida := "vivo"
  var zombies := [exibirzombie,exibirzombie,exibirzombie,exibirzombie,exibirzombie,exibirzombie]
  x_inicial = x
  ######### Functions/Comands #########

  esperar()
    n = (Relogio.agora div 120 mod esperazombie.tamanho + 1).inteiro
    exibirzombie := esperazombie[n]
  fim

  desenhe()
    exibirzombie.desenhe(x, y, 1, 0, escala, escala)
  fim

  andar()
      n = (Relogio.agora div 120 mod andazombie.tamanho + 1).inteiro
      exibirzombie := andazombie[n]
      x := x - aleatorio([0.0, 0.3, 0.5, 0.6, 0.7, 1, 1,2])
  fim

  morrer()
    n = (Relogio.agora div 120 mod morrerzombie.tamanho + 1).inteiro
    exibirzombie := morrerzombie[n]
    exibirzombie := morrerzombie[10]
  fim
  ataque()
      n = (Relogio.agora div 120 mod ataquezombie.tamanho + 1).inteiro
      exibirzombie := ataquezombie[n]
      se n == 8 entao
        r_pontos := r_pontos + 1
      fim
  fim
  #zumbi damage in robot
  retorno_zombie()
    se r_pontos < 20 entao
      r_dano := 10
    senãose r_pontos < 20 * 2 então
      r_dano := 9
    senãose r_pontos < 20 * 3 então
      r_dano := 8
    senãose r_pontos < 20 * 4 então
      r_dano := 7
    senãose r_pontos < 20 * 5 então
      r_dano := 6
    senãose r_pontos < 20 * 6 então
      r_dano := 5
    senãose r_pontos < 20 * 7 então
      r_dano := 4
    senãose r_pontos < 20 * 8 então
      r_dano := 3
    senãose r_pontos < 20 * 9 então
      r_dano := 2
    senãose r_pontos < 20 * 10 então
      r_dano := 1
    senao
      r_vida := "morto"
    fim
  #dano caso o zombie chegue no fim do cenário
    se x < x_inicial -900.0  então
      r_dano := r_dano-2
    fim
    r_dano
  fim

  retorno_vida()
    r_vida
  fim
  atualize()

  fim
fim
